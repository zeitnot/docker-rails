version: '3.4'
services:
  nginx:
    ports:
      - protocol: tcp
        mode: host
        published: 80
        target: 80
    image: zeitnot/nginx:prod
    volumes:
      - assets:/var/www/poll/public
    deploy:
      placement:
        constraints: [node.role == manager]
  asset_compiler:
    image: zeitnot/rails:prod
    command: ["bundle","exec","rake", "assets:precompile"]
    volumes:
      - assets:/app/public
    env_file:
      - .env/production.env
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: none
  migrator:
    image: zeitnot/rails:prod
    command: ["./wait-for","--timeout=300","db:5432","--","bin/rails","db:migrate"]
    env_file:
      - .env/production.env
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: none
  db:
    image: postgres:11.3
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env/production.env
    deploy:
      placement:
        constraints: [node.role == manager]
  rails:
    image: zeitnot/rails:prod
    stop_grace_period: 30s
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file:
      - .env/production.env
    deploy:
      replicas: 4
      update_config:
        delay: 20s
        parallelism: 1
      placement:
        constraints: [node.role == worker]
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
volumes:
  db-data:
  assets:
